{"version":3,"sources":["icons/arrow-right.svg","constants/routes.js","context/user.js","context/firebase.js","img/logo-music-database-theme-dark.png","components/Header.js","components/RecentlyAddedAlbums.js","components/FeaturedAlbums.js","pages/home.js","lib/firebase.js","pages/login.js","pages/signup.js","pages/basic-file-upload.js","pages/upload.js","components/AlbumDetails.js","pages/profile.js","pages/collection.js","pages/not-found.js","hooks/useAuthListener.js","App.js","index.js"],"names":["_defs","_path","HOME","LOGIN","SIGNUP","UPLOAD","UserContext","createContext","FirebaseContext","Header","useContext","firebase","currentUser","className","to","ROUTES","aria-label","onSubmit","console","log","type","name","placeholder","displayName","RecentlyAddedAlbums","useState","albumsCollection","setAlbumsCollection","db","firestore","useEffect","a","collection","get","docs","map","doc","data","albumId","id","fetchAlbums","albumComponents","album","src","albumCover","alt","albumTitle","artist","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrowRight","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","fill","fillOpacity","d","transform","ForwardRef","FeaturedAlbums","slice","index","Home","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","document","history","useHistory","email","setEmail","password","setPassword","error","setError","isInvalid","handleLogin","event","preventDefault","auth","signInWithEmailAndPassword","push","message","method","value","onChange","disabled","SignUp","username","setUsername","handleSignUp","createUserWithEmailAndPassword","createdUser","user","updateProfile","uid","set","userId","toLowerCase","dateCreated","Date","now","match","BasicFileUpload","fileUrl","setFileUrl","handleFileUpload","file","files","storage","storageRef","fileReference","child","put","getDownloadURL","avatar","Upload","isSubmitted","setIsSubmitted","year","addToUserCollection","albumInfo","setAlbumInfo","handleSubmit","newAlbumRef","createNewAlbum","uploadedBy","albumUsers","createdAlbumRef","update","FieldValue","arrayUnion","fetchAlbumItems","handleChange","checked","AlbumDetails","params","useParams","albumData","setAlbumData","isInCollection","setIsInCollection","includes","fetchAlbumData","handleRemoveFromCollection","arrayRemove","handleAddToCollection","albumButtons","onClick","Profile","Collection","albums","setAlbums","albumsRef","where","snapshot","fetchAlbumsInUserCollection","NotFound","useAuthListener","JSON","parse","localStorage","getItem","setCurrentUser","listener","onAuthStateChanged","authUser","setItem","stringify","removeItem","App","Provider","path","component","exact","Signup","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c6903a37.chunk.js","sourcesContent":["var _defs, _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 22 22\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#00f\",\n    fillOpacity: 0.514,\n    d: \"m-7 1024.36h34v34h-34z\"\n  })), /*#__PURE__*/React.createElement(\"clipPath\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#aade87\",\n    fillOpacity: 0.472,\n    d: \"m-6 1028.36h32v32h-32z\"\n  })))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m345.44 248.29l-194.29 194.28c-12.359 12.365-32.397 12.365-44.75 0-12.354-12.354-12.354-32.391 0-44.744l171.91-171.91-171.91-171.9c-12.354-12.359-12.354-32.394 0-44.748 12.354-12.359 32.391-12.359 44.75 0l194.29 194.28c6.177 6.18 9.262 14.271 9.262 22.366 0 8.099-3.091 16.196-9.267 22.373\",\n    transform: \"matrix(.03541-.00013.00013.03541 2.98 3.02)\",\n    fill: \"#4d4d4d\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.a2811743.svg\";\nexport { ForwardRef as ReactComponent };","export const HOME = \"/\"\nexport const LOGIN = \"/login\"\nexport const SIGNUP = \"/signup\"\nexport const BASIC_FILE_UPLOAD = \"/basic-file-upload\"\nexport const UPLOAD = \"/upload\"\nexport const ALBUM_DETAILS = \"/albums/:albumId\"\nexport const PROFILE = \"/profile/:username\"\nexport const COLLECTION = \"/collection/:username\"\nexport const NOT_FOUND = \"/not-found\"\n","import {createContext} from \"react\"\n\nconst UserContext = createContext(null)\n\nexport default UserContext","import {createContext} from \"react\"\n\nconst FirebaseContext = createContext(null)\n\nexport default FirebaseContext","export default __webpack_public_path__ + \"static/media/logo-music-database-theme-dark.6eae5c55.png\";","import React, { useContext } from \"react\"\nimport {Link} from \"react-router-dom\"\nimport FirebaseContext from \"../context/firebase\"\nimport UserContext from \"../context/user\"\nimport * as ROUTES from \"../constants/routes\"\n\nimport logo from \"../img/logo-music-database-theme-dark.png\"\nimport \"../styles/Header.css\"\n\nconst Header = () => {\n    const {firebase} = useContext(FirebaseContext)\n    // const {user} = useContext(UserContext)\n    const currentUser = useContext(UserContext)\n    // console.log(currentUser.displayName)\n    \n    return (\n        <header className=\"header\">\n            <div className=\"header__container\">\n                <div className=\"header__container-search\">\n                    <Link to={ROUTES.HOME} aria-label=\"Home\" className=\"header__link\">\n                        {/* <img \n                            className=\"container-header__logo\" \n                            src={logo}\n                            alt=\"Music Database logo\"\n                            width=\"150px\"\n                        /> */}\n                        <p className=\"header__logo\">MusicDB</p>\n                    </Link>\n\n                    <form className=\"header__form-search\" onSubmit={() => console.log(\"search\")}>\n                        {/* <label className=\"label\" htmlFor=\"query\">Movie Name</label> */}\n                        <input \n                            className=\"header__input-search\" \n                            type=\"text\" \n                            name=\"query\"\n                            placeholder=\"search\" \n                            // value={query} \n                            // onChange={handleChange}\n                        />\n                        {/* <button className=\"button-search\" type=\"submit\">Search</button> */}\n                    </form>\n                </div>\n                \n                <div className=\"header__container-buttons\">\n                    {currentUser ? (\n                        < >\n                            <Link to={`/profile/${currentUser.displayName}`}>\n                                {/* <button\n                                    type=\"button\"\n                                    className=\"\"\n                                >\n                                    Profile\n                                </button> */}\n                            </Link>\n\n                            <Link to={ROUTES.UPLOAD}>\n                                {/* <button\n                                    type=\"button\"\n                                    className=\"\"\n                                >\n                                    Upload\n                                </button> */}\n                            </Link>\n                             \n                            {/* <button \n                                type=\"button\"\n                                onClick={() => firebase.auth().signOut()}\n                                onKeyDown={(event) => {\n                                    if (event.key === \"Enter\") {\n                                        firebase.auth().signOut()\n                                    }\n                            }}> \n                                Sign Out \n                            </button> */}\n\n                            <button className=\"header__btn\">Account</button>\n                        </>\n                    ):(\n                        < >\n                            <Link to={ROUTES.LOGIN}>\n                                <button \n                                    type=\"button\"\n                                    className=\"container-buttons__button-login\"\n                                    >\n                                        Log In\n                                </button>\n                            </Link>\n                           \n                           <Link to={ROUTES.SIGNUP}>\n                                <button \n                                    type=\"button\"\n                                    className=\"container-buttons__button-signup\"\n                                    >\n                                        Sign Up\n                                </button>\n                           </Link>\n                        </>\n                    )}\n                    \n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import {useState, useEffect, useContext} from \"react\"\nimport * as ROUTES from \"../constants/routes\"\nimport {Link} from \"react-router-dom\"\nimport FirebaseContext from \"../context/firebase\"\n\nimport \"../styles/RecentlyAddedAlbums.css\"\n\nconst RecentlyAddedAlbums = () => {\n\n    const [albumsCollection, setAlbumsCollection] = useState([])\n\n    const {firebase} = useContext(FirebaseContext)\n\n    // create reference to the Firestore database\n    const db = firebase.firestore()\n\n    // fetch albums collection from Firestore\n     useEffect(() => {\n        const fetchAlbums = async() => {\n            const albumsCollection = await db.collection(\"albums\").get()\n            // for each album document in \"albums\" collection in fireStore, return album document and add new property of albumId which value equals to document.id\n            setAlbumsCollection(albumsCollection.docs.map(doc => {\n                return {...doc.data(), albumId: doc.id}\n            }))\n            // console.log(albumsCollection)\n            // console.log(albumsCollection.docs)\n            // console.log(albumsCollection.docs[0].id)\n        }\n     \n        fetchAlbums()\n    \n    },[])\n\n    console.log(albumsCollection)\n\n    const albumComponents = albumsCollection.map(album => {\n        return(\n            <Link \n                to={`/albums/${album.albumId}`} \n                key={album.albumId} \n                className=\"container-albums__link\"\n            >\n                <div \n                    className=\"container-albums__album\"\n                >\n                    <div>\n                        <img\n                            className=\"album__cover\"\n                            src={album.albumCover} \n                            alt={album.albumTitle}\n                        />\n\n                        <p className=\"album__album-title\">\n                            {album.albumTitle}\n                        </p>\n                        <p className=\"album__album-artist\">\n                            {album.artist}\n                        </p>\n                    </div>\n                </div>\n            </Link>\n        ) \n    })\n\n    return(\n        <div className=\"container-uploaded-albums-main\">\n            <div className=\"container-uploaded-albums\">\n                <h2 className=\"heading-recently-added-albums\">Recently added albums</h2>\n                <div className=\"container-albums\">\n                    {albumComponents}\n                </div>\n            </div>\n        </div>\n        \n       \n    )\n}\n\nexport default RecentlyAddedAlbums","import {useState, useEffect, useContext} from \"react\"\nimport * as ROUTES from \"../constants/routes\"\nimport {Link} from \"react-router-dom\"\nimport FirebaseContext from \"../context/firebase\"\n\nimport {ReactComponent as IconArrow} from \"../icons/arrow-right.svg\"\n\nimport \"../styles/FeaturedAlbums.css\"\n\nconst FeaturedAlbums = () => {\n    const [albumsCollection, setAlbumsCollection] = useState([])\n\n    const {firebase} = useContext(FirebaseContext)\n\n    // create reference to the Firestore database\n    const db = firebase.firestore()\n\n    // fetch albums collection from Firestore\n     useEffect(() => {\n        const fetchAlbums = async() => {\n            const albumsCollection = await db.collection(\"albums\").get()\n            // for each album document in \"albums\" collection in fireStore, return album document and add new property of albumId which value equals to document.id\n            setAlbumsCollection(albumsCollection.docs.map(doc => {\n                return {...doc.data(), albumId: doc.id}\n            }))\n            // console.log(albumsCollection)\n            // console.log(albumsCollection.docs)\n            // console.log(albumsCollection.docs[0].id)\n        }\n     \n        fetchAlbums()\n    \n    },[])\n\n    // console.log(albumsCollection.slice(10))\n\n    const albumComponents = albumsCollection.slice(12).map((album, index) => {\n        return(\n            <Link \n                to={`/albums/${album.albumId}`} \n                key={album.albumId} \n                className=\"container-albums__link\"\n            >\n                <div className=\"album-featured\">\n                        <img\n                            className={`album__cover album__cover--featured ${index === 1 && \"album__cover--central-album\"}`}\n                            src={album.albumCover} \n                            alt={album.albumTitle}\n                        />\n\n                        <p className={`album-featured__artist ${index === 1 && \"album-featured__artist--central\"}`}>\n                            <span className=\"album-featured__title\">\n                            {album.albumTitle}</span> <span className=\"album-featured__artist\">- {album.artist}</span>\n                        </p>\n                        {/* <p className=\"album-featured__artist\">\n                            {album.artist}\n                        </p> */}\n                </div>\n            </Link>\n        ) \n    })\n\n    return(\n        <div className=\"container-featured-albums\">\n            <IconArrow className=\"arrow flip-horizontally\"/>\n            <div className=\"featured-albums\">\n                {albumComponents}\n            </div>\n            {/* <div>this is featured albums</div> */}\n            <IconArrow className=\"arrow\"/>\n        </div>\n    )\n}\n\nexport default FeaturedAlbums","import {Link} from \"react-router-dom\"\nimport * as ROUTES from \"../constants/routes\"\nimport \"../styles/App.css\"\n\nimport Header from \"../components/Header\"\nimport RecentlyAddedAlbums from \"../components/RecentlyAddedAlbums\"\nimport FeaturedAlbums from \"../components/FeaturedAlbums\"\n\nconst Home = () => {\n    return(\n        <div>\n            <Header />\n            <FeaturedAlbums />\n            <RecentlyAddedAlbums />\n\n            {/* <Link to={ROUTES.BASIC_FILE_UPLOAD} aria-label=\"Home\">\n                <p>Basic file upload example</p>\n            </Link> */}\n        </div>  \n    )\n}\n\nexport default Home","// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase/app\"\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\n// import * as firebase from \"firebase/app\"\n\n// import {seedDatabase} from \"../seed\"\n\n// Add the Firebase products that you want to use\n// if we don't import \"firebase/auth, we will get an error when we try to call firebase.auth(), -> firebase.auth is not a function\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDuEwmT2cV58YFWHEuXbTijl-skMkP-eWY\",\n    authDomain: \"fir-app-da0cd.firebaseapp.com\",\n    projectId: \"fir-app-da0cd\",\n    storageBucket: \"fir-app-da0cd.appspot.com\",\n    messagingSenderId: \"587114597583\",\n    appId: \"1:587114597583:web:85879109373d8dfc92fbba\"\n  }\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport {firebase}","import React, {useEffect, useState, useContext} from \"react\"\n// import FirebaseContext from \"../context/firebase\"\nimport {firebase} from \"../lib/firebase\"\nimport {Link, useHistory} from \"react-router-dom\"\nimport * as ROUTES from \"../constants/routes\"\nimport \"../styles/login.css\"\n\nimport Header from \"../components/Header\"\n\nconst Login = () => {\n\n    // set page title\n    useEffect(() => {\n        document.title = \"Login\"\n    },[])\n\n    const history = useHistory()\n    // extract firebase with destructuring from Context object\n    // const {firebase} = useContext(FirebaseContext)\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const [error, setError] = useState(\"\")\n    const isInvalid = password === \"\" || password.length < 6 || email === \"\"\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        try {\n            await firebase.auth().signInWithEmailAndPassword(email, password)\n            // redirect user to the home page in case of successful login\n            history.push(ROUTES.HOME)\n        } catch (error){\n            setEmail(\"\")\n            setPassword(\"\")\n            setError(error.message)\n        }\n    }\n\n    return (\n        <>\n        <Header />\n        <div className=\"container\">\n            <div className=\"container-login\">\n                {error && <p className=\"paragraph-error\">\n                    {error} \n                    <br/>\n                    <br/>\n                    Please try again.\n                </p>}\n                <form method=\"POST\" className=\"container-form\" onSubmit={handleLogin}>\n                    <input \n                        aria-label=\"Enter your email address\"\n                        className=\"input-login\"\n                        type=\"text\"\n                        placeholder=\"Email address\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n                    <input \n                        aria-label=\"Enter your password\"\n                        className=\"input-login\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                    <button \n                        type=\"submit\"\n                        className={`button-login font-bold ${isInvalid && \"button-disabled\"}`}\n                        disabled={isInvalid}\n                    >\n                        Log In\n                    </button>\n                </form>\n            </div>\n            <div className=\"container-login container-signup\">\n                <p>\n                    Don't have an account?{\" \"}\n                    <Link to={ROUTES.SIGNUP} className=\"font-bold link link-signup\">\n                        Sign up\n                    </Link>\n                </p>\n            </div>\n        </div> \n        </>\n    )\n}\n\nexport default Login","import React, {useEffect, useState, useContext} from \"react\"\nimport FirebaseContext from \"../context/firebase\"\nimport {Link, useHistory} from \"react-router-dom\"\nimport * as ROUTES from \"../constants/routes\"\n// import {doesUsernameExist} from \"../services/firebase\"\nimport \"../styles/signup.css\"\n\nconst SignUp = () => {\n    // set page title\n    useEffect(() => {\n        document.title = \"Sign up\"\n    },[])\n\n    const history = useHistory()\n    const {firebase} = useContext(FirebaseContext)\n    const db = firebase.firestore()\n\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const [error, setError] = useState(\"\")\n    const isInvalid = username ===\"\" || email === \"\" || password === \"\" || password.length < 6\n\n    const handleSignUp = async (event) => {\n        event.preventDefault()\n            try {\n                const createdUser = await firebase\n                    .auth()\n                    .createUserWithEmailAndPassword(email, password)\n\n                    console.log(createdUser.user)\n\n                // update user profile in firebase Authenication \n                await createdUser.user.updateProfile({\n                    displayName: username\n                })\n\n                // create new user document in FireStore \"users\" collection and set user document ID equal to Firebase Authentication user record\n\n                await db.collection(\"users\").doc(createdUser.user.uid).set({\n                        userId: createdUser.user.uid,\n                        username: username.toLowerCase(),\n                        email: email.toLowerCase(),\n                        dateCreated: Date.now()\n                    \n                })\n\n                // create a new user document in FireStore \"users\" collection\n                // await db.collection(\"users\").add({\n                //     userId: createdUser.user.uid,\n                //     username: username.toLowerCase(),\n                //     email: email.toLowerCase(),\n                //     dateCreated: Date.now()\n                // })\n\n                // redirect user after creating new user\n                history.push(ROUTES.HOME)\n     \n             } catch (error) {\n                 setUsername(\"\")\n                 setEmail(\"\")\n                 setPassword(\"\")\n                 setError(error.message)\n             }\n    }\n\n    const handleUsernameChange = (event) => {\n        // return value only matching (\"^[a-z0-9]*$\")\n        // if we will add a space inside of brackets, like this: (\"^[a-z0-9 ]*$\"), we will be able to include spaces in a string. This is called Regular expressions, check MDN docs for reference\n        event.target.value.match(\"^[a-z0-9]*$\")!=null && setUsername(event.target.value.toLowerCase())\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"container-signup\">\n                {error && <p className=\"paragraph-error\">\n                    {error} \n                    <br/>\n                    <br/>\n                    Please try again.\n                </p>}\n                <form method=\"POST\" className=\"container-form\" onSubmit={handleSignUp}>\n                    <input \n                        aria-label=\"Enter your username\"\n                        className=\"container-signup__input\"\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={handleUsernameChange}\n                    />\n                    <input \n                        aria-label=\"Enter your email address\"\n                        className=\"container-signup__input\"\n                        type=\"text\"\n                        placeholder=\"Email address\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value.toLowerCase())}\n                    />\n                    <input \n                        aria-label=\"Enter your password\"\n                        className=\"container-signup__input\"\n                        type=\"password\"\n                        placeholder=\"Password, at least 6 characters\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                    <button \n                        type=\"submit\"\n                        className={`button-login font-bold ${isInvalid && \"button-disabled\"}`}\n                        disabled={isInvalid}\n                    >\n                        Sign up\n                    </button>\n                </form>\n            </div>\n            <div className=\"container-login container-signup\">\n                <p>\n                    Have an account?{\" \"}\n                    <Link to={ROUTES.LOGIN} className=\"font-bold link link-signup\">\n                        Log in\n                    </Link>\n                </p>\n            </div>\n        </div> \n    )\n}\n\nexport default SignUp","import {useState} from \"react\"\nimport {firebase} from \"../lib/firebase\"\nimport '../styles/App.css'\n\n// if you forgot to import \"firebase/firestore\" in /lib/firebase.js, you will get an error: firebase.firestore is not a function\n\nconst BasicFileUpload = () => {\n  const [fileUrl, setFileUrl] = useState(null)\n\n  // https://firebase.google.com/docs/storage/web/create-reference?authuser=0\n  // https://firebase.google.com/docs/storage/web/upload-files?authuser=0\n  const handleFileUpload = async (event) => {\n      // get file object from the file input\n      const file = event.target.files[0]\n      // create reference to the storage service, which is used to create references in your storage bucket\n      const storage = firebase.storage()\n      // create storage reference from our storage service\n      const storageRef = storage.ref()\n      // create child reference\n      const fileReference = storageRef.child(file.name)\n      // upload our file from our form input to the firebase Storage\n      await fileReference.put(file)\n      // after we're uploaded our file to the firebase Storage, we need to get an URL to this file. We will need this fileUrl later, when we will be creating user record with the username and avatar. We need to store this url in the state. \n      const fileUrl = await fileReference.getDownloadURL()\n      // save URL in the state\n      setFileUrl(fileUrl)\n  }\n\n  console.log(fileUrl)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // create reference to the Firestore database\n    const db = firebase.firestore()\n    // get username from the input\n    const username = event.target.username.value\n    ////////////////////////////////////////////////////\n    // if username is true (not empty), then console.log(username)\n    username && console.log(username)\n    ////////////////////////////////////////////////////\n    // if username is not empty, then(&& === then) add a new document in collection \"users\"\n    username && db.collection(\"users\").doc(username).set({\n      name: username,\n      avatar: fileUrl\n    })\n  }\n  \n  return (\n    <div className=\"App\">\n      <p>this is basic file upload to Firebase example</p>\n\n      <form onSubmit={handleSubmit}>\n        {/* file upload */}\n        <input \n          type=\"file\" \n          onChange={handleFileUpload}\n        />\n\n        {/* username input */}\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"type in your username\"\n        />\n\n        <button \n          type=\"submit\"\n          >\n            Submit\n          </button>\n      </form>\n      \n\n    </div>\n  );\n}\n\nexport default BasicFileUpload\n","import {useContext, useEffect, useState} from \"react\"\n// below is a proper import if we don't use FirebaseContext\n// import firebase from \"firebase/app\"\nimport UserContext from \"../context/user\"\nimport FirebaseContext from \"../context/firebase\"\n\nimport Header from \"../components/Header\"\n\nimport \"../styles/upload.css\"\n\nconst Upload = () => {\n\n  const {firebase} = useContext(FirebaseContext)\n\n  const [fileUrl, setFileUrl] = useState(null)\n  const [albumsCollection, setAlbumsCollection] = useState([])\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  const [albumInfo, setAlbumInfo] = useState({\n    albumTitle: \"\",\n    artist: \"\",\n    year: \"\",\n    addToUserCollection: false\n  })\n\n  const {albumTitle, artist, year, addToUserCollection} = albumInfo\n\n  // create reference to the Firestore database\n  const db = firebase.firestore()\n\n  const currentUser = useContext(UserContext)\n\n  const isInvalid = albumTitle === \"\" || artist === \"\" || year === \"\" || fileUrl === null\n\n  // https://firebase.google.com/docs/storage/web/create-reference?authuser=0\n  // https://firebase.google.com/docs/storage/web/upload-files?authuser=0\n  const handleFileUpload = async (event) => {\n      // get file object from the file input\n      const file = event.target.files[0]\n      // create reference to the storage service\n      const storage = firebase.storage()\n      // create storage reference from our storage service\n      const storageRef = storage.ref()\n      // create child reference\n      const fileReference = storageRef.child(file.name)\n      // upload file from form input to the firebase Storage\n      await fileReference.put(file)\n      // after we're uploaded our file to the firebase Storage, we need to get an URL to this file. We will need this fileUrl later, when we will be creating user record with the username and avatar. We need to store this url in the state. \n      const fileUrl = await fileReference.getDownloadURL()\n      // save URL in the state\n      setFileUrl(fileUrl)\n  }\n\n  console.log(fileUrl)\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    // <<-- Create document in Firestore -->>\n    // check Add data chapter in Firebase docs\n    // https://firebase.google.com/docs/firestore/manage-data/add-data#web-v8_11\n\n    // In some cases, it can be useful to create a document reference with an auto-generated ID, then use the reference later. For this use case, you can call doc():\n    // Add a new document with a generated id.\n    const newAlbumRef = db.collection(\"albums\").doc()\n\n    // later...\n    const createNewAlbum = async() => {\n        await newAlbumRef.set({\n          albumId: newAlbumRef.id,\n          albumTitle: albumTitle,\n          artist: artist,\n          year: year,\n          albumCover: fileUrl,\n          uploadedBy: currentUser.uid,\n          dateCreated: Date.now(),\n          albumUsers: []\n      })\n      console.log(newAlbumRef.id)\n\n      // <<-- Get and Read data in Firestore -->>\n      // check Get data chapter in Firebase docs\n      // https://firebase.google.com/docs/firestore/query-data/get-data\n\n      // create reference for an album document we're created above\n      const createdAlbumRef = await db.collection(\"albums\").doc(newAlbumRef.id)\n\n      // <<-- Update a document in Firestore -->>\n      // add album to user collection by updating albumUsers field in Firestore if user checked 'add this album to my collection' checkbox\n      addToUserCollection && createdAlbumRef.update({albumUsers: firebase.firestore.FieldValue.arrayUnion(currentUser.uid)})\n    }\n\n    albumTitle && createNewAlbum()\n    \n    // clean albumInfo state after we submitted album upload form\n    setAlbumInfo({\n      albumTitle: \"\",\n      artist: \"\",\n      year: \"\",\n      addToUserCollection: false\n    })\n\n    setFileUrl(null)\n    albumTitle && setIsSubmitted(true)\n      \n    // albumTitle && db.collection(\"albums\").doc(albumTitle).set({\n    //     name: albumTitle,\n    //     albumCover: fileUrl\n    // })\n\n    fileUrl && console.log(\"file uploaded\")\n  }\n\n  useEffect(() => {\n    const fetchAlbumItems = async() => {\n        const albumsCollection = await db.collection(\"albums\").get()\n        setAlbumsCollection(albumsCollection.docs.map(doc => {\n            return doc.data()\n        }))\n    }\n\n    fetchAlbumItems()\n\n    setIsSubmitted(false)\n\n  },[isSubmitted])\n\n  console.log(isSubmitted)\n\n  const handleChange = (event) => {\n    const {name, value, type, checked} = event.target\n    type === \"checkbox\" ? setAlbumInfo({\n      ...albumInfo,\n      [name]: checked\n    }) \n    :\n    setAlbumInfo({\n      ...albumInfo,\n      [name]: value\n    })\n  }\n\n  // console.log(albumsCollection)  \n  \n  return (\n    <div>\n        <Header />\n        <div className=\"container-upload-main\">\n            <div className=\"container-upload\">\n                <h2 className=\"heading-upload-album\">Upload album to the database</h2>\n                <form onSubmit={handleSubmit} className=\"form-upload\">  \n                  <label>\n                    Album title\n                      <input\n                        type=\"text\"\n                        name=\"albumTitle\"\n                        placeholder=\"Album title\"\n                        value={albumTitle}\n                        onChange={handleChange}\n                      />\n                  </label>\n                    \n                  <label> \n                    Artist\n                      <input \n                        type=\"text\"\n                        name=\"artist\"\n                        placeholder=\"Artist\"\n                        value={artist}\n                        onChange={handleChange}\n                      />\n                  </label>\n                    \n                  <label> \n                    Released\n                      <input \n                        type=\"number\"\n                        name=\"year\"\n                        className=\"form-upload__input-year\"\n                        placeholder=\"Year\"\n                        value={year}\n                        onChange={handleChange}\n                      />\n                  </label>\n                  \n                  <label className=\"form-upload__label-upload-album-image\">\n                    Upload album image\n                      <input \n                          type=\"file\"\n                          onChange={handleFileUpload}\n                          className=\"form-upload__input-file-upload\"\n                      />\n                  </label>\n\n                  {fileUrl \n                    && \n                  <img \n                    className=\"form-upload__image-uploaded-album\" \n                    src={fileUrl} \n                    alt=\"uploaded album\"\n                  />}\n\n                  {/* <label>Collection</label> */}\n\n                  <label className=\"form-upload__label-add-to-my-collection\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"addToUserCollection\"\n                        checked={albumInfo.addToUserCollection}\n                        onChange={handleChange}\n                        className=\"form-upload__input-checkbox\"\n                      />\n                    add this album to my collection\n                  </label>\n\n                    <button \n                      type=\"submit\"\n                      className={`form-upload__btn-upload ${isInvalid && \"btn-disabled\"}`}\n                      disabled={isInvalid}\n                    >\n                        Upload album to database\n                    </button>\n                </form>\n                \n                {/* <div className=\"container-albums\">\n                    {albumsCollection.map(album => {\n                        return <div \n                                    key={album.albumTitle} \n                                    className=\"container-albums__album\">\n\n                                    <img \n                                        width=\"150px\"\n                                        src={album.albumCover} \n                                        alt={album.albumTitle}\n                                    />\n\n                                    <p>{album.albumTitle}</p>\n\n                              </div>\n                    })}\n                </div> */}  \n            </div>\n        </div>\n    </div>\n  )\n} \n\nexport default Upload\n","import {useEffect, useState, useContext} from \"react\"\nimport {useParams} from \"react-router-dom\"\nimport FirebaseContext from \"../context/firebase\"\nimport UserContext from \"../context/user\"\n\nimport Header from \"../components/Header\"\n\nimport \"../styles/AlbumDetails.css\"\n\nconst AlbumDetails = () => {\n\n    const currentUser = useContext(UserContext)\n    // const currentUser = null\n\n    const params = useParams()\n    console.log(params)\n    // destructure out albumId from params\n    const {albumId} = useParams()\n    console.log(albumId)\n\n    const {firebase} = useContext(FirebaseContext)\n\n    // create reference to the Firestore database\n    const db = firebase.firestore()\n\n    // make AJAX call to get the info about the specified album\n    // I can either make a call to firebase and get an album with provided Id from firestore, or I can get all collection as an array and find specific album there\n\n    const [albumData, setAlbumData] = useState([])\n    const {albumCover, artist, year, albumTitle, albumUsers} = albumData\n\n    const [isInCollection, setIsInCollection] = useState(false)\n\n    useEffect(() => {\n        const fetchAlbumData = async() => {\n            const album = await db.collection(\"albums\").doc(albumId).get()\n            setAlbumData(album.data())\n\n            // proceed this step only if user is logged in. currentUser is true? then setIsIncollection()\n            currentUser && setIsInCollection(album.data().albumUsers.includes(currentUser.uid))\n            // console.log(album.data().albumUsers.includes(currentUser.uid))\n        }\n    \n        fetchAlbumData()\n\n    },[])\n\n    console.log(albumUsers) \n    // console.log(currentUser.uid)\n    console.log(`album is in collection: ${isInCollection}`)\n\n    // console.log(albumUsers.includes(currentUser.uid))\n\n    // looks like I can also perform a separate query to the firestore and check if user id is in albumUsers field.\n\n    // const isAlbumInUserCollection = albumUsers.includes(currentUser.uid)\n    // console.log(isAlbumInUserCollection)\n\n    const handleRemoveFromCollection = async() => {\n        const album = await db.collection(\"albums\").doc(albumId)\n        album.update({albumUsers: firebase.firestore.FieldValue.arrayRemove(currentUser.uid)})\n        setIsInCollection(false)\n    }\n\n    const handleAddToCollection = async() => {\n        const album = await db.collection(\"albums\").doc(albumId)\n        album.update({albumUsers: firebase.firestore.FieldValue.arrayUnion(currentUser.uid)})\n        setIsInCollection(true)\n    }\n\n    const albumButtons = \n    // check if user is logged in\n    !currentUser\n    ? <p>Login to add this album to your collection</p>\n    // if user is logged in, check if album is in user collection\n    : isInCollection\n        ? <button\n            type=\"button\"\n            onClick={handleRemoveFromCollection}\n            >\n                Remove from collection\n            </button> \n        : <button\n            type=\"button\"\n            onClick={handleAddToCollection}\n            >\n                Add to collection\n            </button>\n\n    const albumBtns = () => {\n        if (!currentUser) {\n            return <p>Login to add this album to your collection</p> \n        }\n        if (isInCollection) {\n            return <button>Remove from collection</button>\n        } else {\n            return <button>Add to collection</button>\n        }\n    }\n\n    return(\n        <div>\n            <Header />\n            <div className=\"container-album\">\n                <img \n                    src={albumCover} \n                    alt={albumTitle} \n                    className=\"container-album__album-cover\"\n                />\n                <div>\n                    <p>Album: {albumTitle}</p>\n                    <p>Artist: {artist}</p>\n                    <p>Year: {year}</p>\n                    {/* YOU CAN ALSO JUST ADD LOADING SKELETON, so you wont see the gap when data is still fetching and add to collection and remove from collection buttons wont flashing */\n                    // if current user is logged in, then check if album is in his collection. If user is not logged in, then show him a login link\n                    }\n                    {albumButtons}\n                </div>\n            </div>\n        </div>\n       \n    )\n}\n\nexport default AlbumDetails","import {useContext} from \"react\"\nimport UserContext from \"../context/user\"\n\nimport {Link} from \"react-router-dom\"\n\nimport Header from \"../components/Header\"\n\nconst Profile = () => {\n\n    const currentUser = useContext(UserContext)\n\n    return(\n        <div>\n            <Header />\n            <div>this is profile page</div>\n            <Link to={`/collection/${currentUser.displayName}`}>\n                <button\n                    type=\"button\"\n                    className=\"\"\n                >\n                    My collection\n                </button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Profile","import {useContext, useState, useEffect} from \"react\"\n\nimport {Link} from \"react-router-dom\"\n\nimport FirebaseContext from \"../context/firebase\"\nimport UserContext from \"../context/user\"\n\nimport Header from \"../components/Header\"\n\nimport \"../styles/collection.css\"\n\nconst Collection = () => {\n\n    const {firebase} = useContext(FirebaseContext)\n    const currentUser = useContext(UserContext)\n    // console.log(currentUser.uid)\n\n    // create reference to the Firestore database\n    const db = firebase.firestore()\n\n    // now lets make an AJAX call to firestore and save response to the state\n\n    const [albums, setAlbums] = useState([])\n\n    \n\n    useEffect(() => {\n        const fetchAlbumsInUserCollection = async() => {\n            const albumsRef = db.collection(\"albums\")\n            const snapshot = await albumsRef.where(\"albumUsers\", \"array-contains\", currentUser.uid).get()\n\n            setAlbums(snapshot.docs.map(album => {\n                return album.data()\n            }))    \n        }\n\n        fetchAlbumsInUserCollection()\n\n    },[])\n\n    console.log(albums)  \n\n    const albumComponents = albums.map(album => {\n        return(\n            <Link \n                to={`/albums/${album.albumId}`} \n                key={album.albumId} \n                className=\"container-albums__link\"\n            >\n                <div \n                    className=\"container-albums__album\"\n                >\n                    <div>\n                        <img\n                            className=\"album__cover\"\n                            src={album.albumCover} \n                            alt={album.albumTitle}\n                        />\n\n                        <p className=\"album__album-title\">\n                            {album.albumTitle}\n                        </p>\n                        <p className=\"album__album-artist\">\n                            {album.artist}\n                        </p>\n                    </div>\n                </div>\n            </Link>\n        ) \n    })\n\n    return(\n        <div>\n            <Header />\n            <div>this is collection of {currentUser.displayName}</div>\n\n            <div className=\"container-uploaded-albums-main\">\n                <div className=\"container-uploaded-albums\">\n                    <h2 className=\"heading-recently-added-albums\">Collection</h2>\n                    <div className=\"container-albums\">\n                        {albumComponents}\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Collection","const NotFound = () => {\n    return(\n        <div>\n            This is Not Found page.\n        </div>\n    )\n}\n\nexport default NotFound","// this hook is listening for authentication changes\n// I decided to store current user in a local storage, so the header don't flicker while firebase is figuring out, is user signed in or not during a firebase.auth().onAuthStateChanged call\n\nimport {useState, useEffect, useContext} from \"react\"\nimport FirebaseContext from \"../context/firebase\"\n\nconst useAuthListener = () => {\n    const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem(\"authUser\")))\n    const {firebase} = useContext(FirebaseContext)\n\n    useEffect(() => {\n    // we make a call to the remote firebase database, and check if user is signed into the firebase. Firebase use Authentication State Persistence for that. Check https://firebase.google.com/docs/auth/web/auth-state-persistence for more info.\n      const listener = firebase.auth().onAuthStateChanged(authUser => {\n        // if user is authenticated into remote firebase, then let's write this user to the local storage\n          if(authUser) {\n              localStorage.setItem(\"authUser\", JSON.stringify(authUser))\n            // write authUser that we're get from firebase to the currentUser state\n              setCurrentUser(authUser)\n          } else {\n            // if user is not signed in firebase, clean up localStorage and set current user to null\n              localStorage.removeItem(\"authUser\")\n              setCurrentUser(null)\n          }\n        })\n\n        // clean up listener\n        return() => listener\n\n    }, [firebase])\n\n    return currentUser\n}\n\nexport default useAuthListener","import {HashRouter as Router, Route, Switch} from \"react-router-dom\"\nimport * as ROUTES from \"./constants/routes\"\nimport \"./styles/App.css\"\n\nimport UserContext from \"./context/user\"\n\n// pages\nimport Home from \"./pages/home\"\nimport Login from \"./pages/login\"\nimport Signup from \"./pages/signup\"\nimport BasicFileUpload from \"./pages/basic-file-upload\"\nimport Upload from \"./pages/upload\"\nimport AlbumDetails from \"./components/AlbumDetails\"\nimport Profile from \"./pages/profile\"\nimport Collection from \"./pages/collection\"\nimport NotFound from \"./pages/not-found\"\n\nimport useAuthListener from \"./hooks/useAuthListener\"\n\nconst App = () => {\n\n  const currentUser = useAuthListener()\n  \n  return(\n    <UserContext.Provider value = {currentUser}>\n      <Router>\n            <Switch>\n              <Route path={ROUTES.HOME} component ={Home} exact />\n              <Route path={ROUTES.LOGIN} component={Login} />\n              <Route path={ROUTES.SIGNUP} component={Signup} />\n              <Route path={ROUTES.BASIC_FILE_UPLOAD} component={BasicFileUpload} />\n              <Route path={ROUTES.UPLOAD} component={Upload} />\n              <Route path={ROUTES.ALBUM_DETAILS} component={AlbumDetails} />\n              <Route path={ROUTES.PROFILE} component={Profile} />\n              <Route path={ROUTES.COLLECTION} component={Collection} />\n              <Route component={NotFound} />\n            </Switch>\n      </Router>\n    </UserContext.Provider>\n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/index.css\"\n\nimport {firebase} from \"./lib/firebase\"\nimport FirebaseContext from \"./context/firebase\"\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{firebase}}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}